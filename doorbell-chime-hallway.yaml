esphome:
  name: doorbell-chime-hallway
  friendly_name: doorbell-chime-hallway
  on_boot:
    priority: -100  # Lower priority ensures WiFi is ready
    then:
      - delay: 3s
      - media_player.volume_set: 10%
      - media_player.speaker.play_on_device_media_file:
          media_file: chime_sound
          announcement: true
      - wait_until:
          media_player.is_announcing:
      - wait_until:
          not:
            media_player.is_announcing:
      - media_player.stop:
          announcement: true
      - media_player.volume_set: 90%

# https://community.home-assistant.io/t/esp32-s3-devkitc-1-n16r8-using-psram-howto/652601/8
#psram:
#  mode: octal
#  speed: 80MHz

esp32:
  board: tinypico
  framework:
    type: esp-idf

logger:
#  level: VERY_VERBOSE

api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  # esp32 needs the output_power setting, see https://github.com/espressif/arduino-esp32/issues/2144#issuecomment-2028949116
  output_power: 8.5dB

web_server:
  port: 80

prometheus:

sensor:
  - platform: uptime
    name: Uptime

  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

#status_led:
# https://help.unexpectedmaker.com/index.php/knowledge-base/esphome-with-tinypico-apa-rgb-led/
# cool idea for the rgb led: https://github.com/esphome/esphome/pull/5814:

i2s_audio:
  i2s_lrclk_pin: GPIO27
  i2s_bclk_pin: GPIO26

speaker:
  - platform: i2s_audio
    id: speaker_id
    dac_type: external
    i2s_dout_pin: GPIO25
    sample_rate: 48000
  - platform: mixer
    id: mixer_speaker_id
    output_speaker: speaker_id
    source_speakers:
      - id: announcement_spk_mixer_input
      - id: media_spk_mixer_input
  - platform: resampler
    id: media_spk_resampling_input
    output_speaker: media_spk_mixer_input
  - platform: resampler
    id: announcement_spk_resampling_input
    output_speaker: announcement_spk_mixer_input

media_player:
  - platform: speaker
    name: "Speaker Media Player"
    id: speaker_media_player_id
    media_pipeline:
      speaker: media_spk_resampling_input
      num_channels: 2
    announcement_pipeline:
      speaker: announcement_spk_resampling_input
      num_channels: 1
    # Placed in the assets dir. Should be encoded with a 48000 Hz sample rate, mono or stereo audio, and 16 bits per sample.
    files:
      - id: doorbell_sound
        file: assets/doorbell-1chan-48000.flac
      - id: chime_sound
        file: assets/sbb-1chan-48000.flac

button:
  - platform: template
    id: doorbell_button
    name: Doorbell
    icon: "mdi:bell"
    on_press:
      - mixer_speaker.apply_ducking:
          id: media_spk_mixer_input
          decibel_reduction: 20
          duration: 0.0s
      - media_player.speaker.play_on_device_media_file:
          media_file: doorbell_sound
          announcement: true
      - wait_until:
          media_player.is_announcing:
      - wait_until:
          not:
            media_player.is_announcing:
      - media_player.stop:
          announcement: true
      - mixer_speaker.apply_ducking:
          id: media_spk_mixer_input
          decibel_reduction: 0
          duration: 2.0s
